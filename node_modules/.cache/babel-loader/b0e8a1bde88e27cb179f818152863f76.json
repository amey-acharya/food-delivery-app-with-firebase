{"ast":null,"code":"var _jsxFileName = \"/Users/ameyacharya/Desktop/assignment/assignment13/src/components/Meals/AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [mealsData, setMealsData] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState(null);\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async () => {\n      const response = await fetch('https://react-demo-1b690-default-rtdb.firebaseio.com/meals.json');\n\n      if (!response.ok) {\n        throw new Error('something went wrong');\n      }\n\n      const data = await response.json();\n      const meals = [];\n\n      for (const key in data) {\n        meals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMealsData(meals);\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealsloading,\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 14\n    }, this);\n  }\n\n  const mealsList = mealsData.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"9Q5X5NneaVnp/PTvk5dtVESgBMI=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["Card","MealItem","classes","useEffect","useState","AvailableMeals","mealsData","setMealsData","isLoading","setIsLoading","httpError","setHttpError","fetchData","response","fetch","ok","Error","data","json","meals","key","push","id","name","description","price","mealsloading","mealsList","map","meal"],"sources":["/Users/ameyacharya/Desktop/assignment/assignment13/src/components/Meals/AvailableMeals.js"],"sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useEffect, useState } from 'react';\n\nconst AvailableMeals = () => {\n  const [mealsData, setMealsData] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n  const [httpError, setHttpError] = useState(null)\n  useEffect(() => {\n    setIsLoading(true)\n    const fetchData = async() => {\n      const response = await fetch('https://react-demo-1b690-default-rtdb.firebaseio.com/meals.json')\n      if (!response.ok) {\n        throw new Error('something went wrong')\n      }\n      const data = await response.json()\n      const meals = []\n      for(const key in data) {\n        meals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        })\n      }\n      setMealsData(meals)\n      setIsLoading(false)\n    }\n    fetchData()\n  },[])\n\n    if (isLoading) {\n      return(<section className={classes.mealsloading}>Loading</section>)\n    }\n\n  const mealsList = mealsData.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,MAAMC,cAAc,GAAG,MAAM;EAAA;;EAC3B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,EAAD,CAA1C;EACA,MAAM,CAACI,SAAD,EAAYC,YAAZ,IAA4BL,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;EACAD,SAAS,CAAC,MAAM;IACdM,YAAY,CAAC,IAAD,CAAZ;;IACA,MAAMG,SAAS,GAAG,YAAW;MAC3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iEAAD,CAA5B;;MACA,IAAI,CAACD,QAAQ,CAACE,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,sBAAV,CAAN;MACD;;MACD,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;MACA,MAAMC,KAAK,GAAG,EAAd;;MACA,KAAI,MAAMC,GAAV,IAAiBH,IAAjB,EAAuB;QACrBE,KAAK,CAACE,IAAN,CAAW;UACTC,EAAE,EAAEF,GADK;UAETG,IAAI,EAAEN,IAAI,CAACG,GAAD,CAAJ,CAAUG,IAFP;UAGTC,WAAW,EAAEP,IAAI,CAACG,GAAD,CAAJ,CAAUI,WAHd;UAITC,KAAK,EAAER,IAAI,CAACG,GAAD,CAAJ,CAAUK;QAJR,CAAX;MAMD;;MACDlB,YAAY,CAACY,KAAD,CAAZ;MACAV,YAAY,CAAC,KAAD,CAAZ;IACD,CAjBD;;IAkBAG,SAAS;EACV,CArBQ,EAqBP,EArBO,CAAT;;EAuBE,IAAIJ,SAAJ,EAAe;IACb,oBAAO;MAAS,SAAS,EAAEN,OAAO,CAACwB,YAA5B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAP;EACD;;EAEH,MAAMC,SAAS,GAAGrB,SAAS,CAACsB,GAAV,CAAeC,IAAD,iBAC9B,QAAC,QAAD;IAEE,EAAE,EAAEA,IAAI,CAACP,EAFX;IAGE,IAAI,EAAEO,IAAI,CAACN,IAHb;IAIE,WAAW,EAAEM,IAAI,CAACL,WAJpB;IAKE,KAAK,EAAEK,IAAI,CAACJ;EALd,GACOI,IAAI,CAACP,EADZ;IAAA;IAAA;IAAA;EAAA,QADgB,CAAlB;EAUA,oBACE;IAAS,SAAS,EAAEpB,OAAO,CAACiB,KAA5B;IAAA,uBACE,QAAC,IAAD;MAAA,uBACE;QAAA,UAAKQ;MAAL;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAOD,CAhDD;;GAAMtB,c;;KAAAA,c;AAkDN,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}